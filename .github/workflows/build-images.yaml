name: Build and push images

on:
  push:
    branches:
      - 'main'
      - 'master'
  workflow_dispatch:
    inputs:
      authorinoVersion:
        description: Authorino version
        required: true
        default: latest
      channels:
        description: Bundle and catalog channels, comma separated
        required: true
        default: stable

env:
  IMG_TAGS: ${{ github.sha }}
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  MAIN_BRANCH_NAME: main
  OPERATOR_NAME: authorino-operator
  BUILD_CONFIG_FILE: build.yaml
  LATEST_AUTHORINO_GITREF: ${{ vars.AUTHORINO_SHA != '' && vars.AUTHORINO_SHA || 'latest' }}

jobs:
  build-bundle:
    name: Build and push bundle image
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.21.x
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
        id: go
      - name: Check out code
        uses: actions/checkout@v3
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add release tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          TAG_NAME=${GITHUB_REF_NAME/\//-}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "IMG_TAGS=${TAG_NAME} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Set Operator version
        id: operator-version
        run: |
          tag=${GITHUB_REF_NAME}
          if [[ ${tag} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
          echo "VERSION=${tag#v}" >> $GITHUB_ENV
          else
          echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV
          fi
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Run make bundle (main)
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        run: make bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} IMAGE_TAG=${{ github.sha }} AUTHORINO_VERSION=${{ env.LATEST_AUTHORINO_GITREF }}
      - name: Run make bundle (release)
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        run: make bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} VERSION=${{env.VERSION}} AUTHORINO_VERSION=${{ github.event.inputs.authorinoVersion }} CHANNELS=${{ github.event.inputs.channels }} DEFAULT_CHANNEL=stable
      - name: Git diff
        run: git diff
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-bundle
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
          build-args: |
            version=${{ env.VERSION }}
          containerfiles: |
            ./bundle.Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-catalog:
    name: Build and push catalog image for arch ${{ matrix.arch }}
    needs: [build-bundle]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [ amd64, arm64, ppc64le, s390x ]
    steps:
      - name: Set up Go 1.21.x
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
        id: go
      - name: Check out code
        uses: actions/checkout@v3
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add release tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          TAG_NAME=${GITHUB_REF_NAME/\//-}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "IMG_TAGS=${TAG_NAME} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Set Operator version
        id: operator-version
        run: |
          tag=${GITHUB_REF_NAME}
          if [[ ${tag} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
          echo "VERSION=${tag#v}" >> $GITHUB_ENV
          else
          echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV
          fi
      - name: Run make catalog (main) for arch ${{ matrix.arch }}
        uses: uraimo/run-on-arch-action@v2
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        with:
          arch: ${{ matrix.arch }}
          githubToken: ${{ github.token }}
          install: |
            sudo apt-get update
            sudo apt-get install -y qemu-user-static
          run: |
            make catalog \
              REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} \
              VERSION=${{ env.VERSION }} \
              IMAGE_TAG=${{ github.sha }} \
              AUTHORINO_VERSION=${{ env.LATEST_AUTHORINO_GITREF }} \
              CHANNELS=${{ inputs.channels }} \
              ARCH=${{ matrix.arch }}

      - name: Run make catalog (release) for arch ${{ matrix.arch }}
        uses: uraimo/run-on-arch-action@v2
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        with:
          arch: ${{ matrix.arch }}
          githubToken: ${{ github.token }}
          install: |
            sudo apt-get update
            sudo apt-get install -y qemu-user-static
          run: |
            make catalog \
              REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} \
              VERSION=${{ env.VERSION }} \
              AUTHORINO_VERSION=${{ env.LATEST_AUTHORINO_GITREF }} \
              CHANNELS=${{ inputs.channels }} \
              ARCH=${{ matrix.arch }}
      - name: Git diff
        run: git diff
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-catalog
          tags: ${{ env.IMG_TAGS }}
          platform: ${{ matrix.arch }}
          arch: ${{ matrix.arch }}
          context: ./catalog
          dockerfiles: |
            ./catalog/${{ env.OPERATOR_NAME }}-catalog.Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
