name: Build and push images

on:
  push:
    branches:
      - 'main'
      - 'master'
  workflow_dispatch:
    inputs:
      authorinoVersion:
        description: Authorino version
        required: true
        default: latest

env:
  IMG_TAGS: ${{ github.sha }}
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  MAIN_BRANCH_NAME: main
  OPERATOR_NAME: authorino-operator

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add branch tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          echo "IMG_TAGS=${GITHUB_REF_NAME/\//-} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64
          containerfiles: |
            ./Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-bundle:
    needs: build
    name: Build and push bundle image
    runs-on: ubuntu-20.04
    if: github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/v') # We cannot use `env.MAIN_BRANCH_NAME` because `env` context is not available to `job.if`. See https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    steps:
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add release tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          echo "IMG_TAGS=${GITHUB_REF_NAME/\//-} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Run make bundle (main)
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        run: make bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }}
      - name: Run make bundle (release)
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        run: make bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} VERSION=${${GITHUB_REF_NAME/\//-}/v/} AUTHORINO_VERSION=${{ github.event.inputs.authorinoVersion }}
      - name: Git diff
        run: git diff
      - name: Verify manifests and bundle (main)
        if: github.ref_name == env.MAIN_BRANCH_NAME
        run: make verify-manifests verify-bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }}
      - name: Verify manifests and bundle (release)
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        run: make verify-manifests verify-bundle REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} VERSION=${${GITHUB_REF_NAME/\//-}/v/} AUTHORINO_VERSION=${{ github.event.inputs.authorinoVersion }}
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-bundle
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64
          containerfiles: |
            ./bundle.Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-catalog:
    name: Build and push catalog image
    needs: [build, build-bundle]
    runs-on: ubuntu-20.04
    if: github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/v') # We cannot use `env.MAIN_BRANCH_NAME` because `env` context is not available to `job.if`. See https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    steps:
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Add release tag
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        id: add-branch-tag
        run: |
          echo "IMG_TAGS=${GITHUB_REF_NAME/\//-} ${{ env.IMG_TAGS }}" >> $GITHUB_ENV
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Run make catalog-generate (main)
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        run: make catalog-generate REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }}
      - name: Run make catalog-generate (release)
        if: ${{ github.ref_name != env.MAIN_BRANCH_NAME }}
        run: make catalog-generate REGISTRY=${{ env.IMG_REGISTRY_HOST }} ORG=${{ env.IMG_REGISTRY_ORG }} IMAGE_TAG=${GITHUB_REF_NAME/\//-}
      - name: Git diff
        run: git diff
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-catalog
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64
          containerfiles: |
            ./index.Dockerfile
      - name: Push Image
        if: ${{ !env.ACT }}
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
